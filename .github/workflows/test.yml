name: Test

on:
  pull_request:
    branches:
      - master

# Infos on current github runners:
# https://docs.github.com/en/free-pro-team@latest/actions/reference/specifications-for-github-hosted-runners#about-github-hosted-runners

jobs:
  test_linux:
    name: Test on Linux64
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@master

      # PREPARE
      - name: Install Python Dependencies
        run: >
          sudo apt-get update && 
          sudo apt-get install 
          python3.8-dev 
          python3.8-tk 
          python3.8-venv
      - name: Install normcap dependencies
        run: > 
          sudo apt-get install 
          tesseract-ocr 
          tesseract-ocr-deu 
          libtesseract-dev 
          libleptonica-dev 
          pkg-config
          xclip
      - name: Create virtual env
        run: python3.8 -m venv .venv
      - name: Install wheel upfront
        run: .venv/bin/python -m pip install wheel
      - name: Install deps
        run: .venv/bin/python -m pip install -r requirements.txt
        env:
          CI: true

      # LINT
      - name: Lint with flake8
        run: .venv/bin/flake8 ./normcap ./tests --count --show-source --statistics

      # TEST
      - name: Test with pytest
        # xvfb-run with bpp 32 has to be used to make the mss screenshot grab work
        run: xvfb-run --server-args="-screen 0 1024x768x24+32" .venv/bin/python -m pytest
        env:
          XDG_SESSION_TYPE: wayland

  test_macos:
    name: Test on MacOS
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@master

      # PREPARE
      - name: Install normcap dependencies
        run: brew install pkg-config tesseract-lang pyenv tcl-tk
      - name: Install pipenv
        run: python3.8 -m pip install wheel
      - name: Create virtual env
        run: python3.8 -m venv .venv
      - name: Install deps
        run: .venv/bin/python -m pip install -r requirements-macos.txt        
        env:
          CI: true

      # TEST
      - name: Test with pytest
        run: .venv/bin/python -m pytest

  test_windows:
    name: Test on Windows
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@master

      # PREPARE
      - name: Install venv
        run: >
          python -m pip install virtualenv;
          python -c "import os, sys; print(os.path.dirname(sys.executable))";
          python --version;
      - name: Create virtual env                         
        run: virtualenv --python C:\hostedtoolcache\windows\Python\3.7.9\x64\python.exe venv
        env:
          CI: true
      - name: Install tesserocr
        run: >
          .\venv\Scripts\activate;
          pip install https://github.com/simonflueckiger/tesserocr-windows_build/releases/download/tesserocr-v2.4.0-tesseract-4.0.0/tesserocr-2.4.0-cp37-cp37m-win_amd64.whl;
          deactivate;
      - name: Download tessdata
        run: >
          new-item -Name tessdata -ItemType directory;  
          cd tessdata;        
          iwr https://raw.githubusercontent.com/tesseract-ocr/tessdata/4.0.0/eng.traineddata -OutFile eng.traineddata;
          iwr https://raw.githubusercontent.com/tesseract-ocr/tessdata_best/4.0.0/deu.traineddata -OutFile deu.traineddata;
          dir;
          cd..;
      - name: Install deps
        run: >
          .\venv\Scripts\activate;
          pip install -r requirements-win.txt;
          deactivate;

      # TEST
      - name: Test with pytest
        run: >
          .\venv\Scripts\activate;
          python -m pytest;
          deactivate;
        env:
          TESSDATA_PREFIX: D:\a\normcap\normcap\tessdata
